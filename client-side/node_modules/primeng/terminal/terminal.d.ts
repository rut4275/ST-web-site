import { AfterViewInit, AfterViewChecked, OnDestroy, ElementRef, ChangeDetectorRef } from '@angular/core';
import { TerminalService } from './terminalservice';
import { Subscription } from 'rxjs';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from '@angular/forms';
export declare class Terminal implements AfterViewInit, AfterViewChecked, OnDestroy {
    el: ElementRef;
    terminalService: TerminalService;
    cd: ChangeDetectorRef;
    welcomeMessage: string;
    prompt: string;
    style: any;
    styleClass: string;
    commands: any[];
    command: string;
    container: Element;
    commandProcessed: boolean;
    subscription: Subscription;
    constructor(el: ElementRef, terminalService: TerminalService, cd: ChangeDetectorRef);
    ngAfterViewInit(): void;
    ngAfterViewChecked(): void;
    set response(value: string);
    handleCommand(event: KeyboardEvent): void;
    focus(element: HTMLElement): void;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<Terminal, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<Terminal, "p-terminal", never, { "response": "response"; "welcomeMessage": "welcomeMessage"; "prompt": "prompt"; "style": "style"; "styleClass": "styleClass"; }, {}, never, never>;
}
export declare class TerminalModule {
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<TerminalModule, [typeof Terminal], [typeof ɵngcc1.CommonModule, typeof ɵngcc2.FormsModule], [typeof Terminal]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<TerminalModule>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGVybWluYWwuZC50cyIsInNvdXJjZXMiOlsidGVybWluYWwuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7Ozs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFmdGVyVmlld0luaXQsIEFmdGVyVmlld0NoZWNrZWQsIE9uRGVzdHJveSwgRWxlbWVudFJlZiwgQ2hhbmdlRGV0ZWN0b3JSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFRlcm1pbmFsU2VydmljZSB9IGZyb20gJy4vdGVybWluYWxzZXJ2aWNlJztcbmltcG9ydCB7IFN1YnNjcmlwdGlvbiB9IGZyb20gJ3J4anMnO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgVGVybWluYWwgaW1wbGVtZW50cyBBZnRlclZpZXdJbml0LCBBZnRlclZpZXdDaGVja2VkLCBPbkRlc3Ryb3kge1xuICAgIGVsOiBFbGVtZW50UmVmO1xuICAgIHRlcm1pbmFsU2VydmljZTogVGVybWluYWxTZXJ2aWNlO1xuICAgIGNkOiBDaGFuZ2VEZXRlY3RvclJlZjtcbiAgICB3ZWxjb21lTWVzc2FnZTogc3RyaW5nO1xuICAgIHByb21wdDogc3RyaW5nO1xuICAgIHN0eWxlOiBhbnk7XG4gICAgc3R5bGVDbGFzczogc3RyaW5nO1xuICAgIGNvbW1hbmRzOiBhbnlbXTtcbiAgICBjb21tYW5kOiBzdHJpbmc7XG4gICAgY29udGFpbmVyOiBFbGVtZW50O1xuICAgIGNvbW1hbmRQcm9jZXNzZWQ6IGJvb2xlYW47XG4gICAgc3Vic2NyaXB0aW9uOiBTdWJzY3JpcHRpb247XG4gICAgY29uc3RydWN0b3IoZWw6IEVsZW1lbnRSZWYsIHRlcm1pbmFsU2VydmljZTogVGVybWluYWxTZXJ2aWNlLCBjZDogQ2hhbmdlRGV0ZWN0b3JSZWYpO1xuICAgIG5nQWZ0ZXJWaWV3SW5pdCgpOiB2b2lkO1xuICAgIG5nQWZ0ZXJWaWV3Q2hlY2tlZCgpOiB2b2lkO1xuICAgIHNldCByZXNwb25zZSh2YWx1ZTogc3RyaW5nKTtcbiAgICBoYW5kbGVDb21tYW5kKGV2ZW50OiBLZXlib2FyZEV2ZW50KTogdm9pZDtcbiAgICBmb2N1cyhlbGVtZW50OiBIVE1MRWxlbWVudCk6IHZvaWQ7XG4gICAgbmdPbkRlc3Ryb3koKTogdm9pZDtcbn1cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIFRlcm1pbmFsTW9kdWxlIHtcbn1cbiJdfQ==