import { ElementRef, EventEmitter } from '@angular/core';
import { Validator, AbstractControl } from '@angular/forms';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
export declare const KEYFILTER_VALIDATOR: any;
export declare class KeyFilter implements Validator {
    el: ElementRef;
    pValidateOnly: boolean;
    ngModelChange: EventEmitter<any>;
    regex: RegExp;
    _pattern: any;
    isAndroid: boolean;
    lastValue: any;
    constructor(el: ElementRef);
    get pattern(): any;
    set pattern(_pattern: any);
    isNavKeyPress(e: KeyboardEvent): boolean;
    isSpecialKey(e: KeyboardEvent): boolean;
    getKey(e: KeyboardEvent): any;
    getCharCode(e: KeyboardEvent): number;
    findDelta(value: string, prevValue: string): string;
    isValidChar(c: string): boolean;
    isValidString(str: string): boolean;
    onInput(e: KeyboardEvent): void;
    onKeyPress(e: KeyboardEvent): void;
    onPaste(e: any): void;
    validate(c: AbstractControl): {
        [key: string]: any;
    };
    static ɵfac: ɵngcc0.ɵɵFactoryDef<KeyFilter, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<KeyFilter, "[pKeyFilter]", never, { "pattern": "pKeyFilter"; "pValidateOnly": "pValidateOnly"; }, { "ngModelChange": "ngModelChange"; }, never>;
}
export declare class KeyFilterModule {
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<KeyFilterModule, [typeof KeyFilter], [typeof ɵngcc1.CommonModule], [typeof KeyFilter]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<KeyFilterModule>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoia2V5ZmlsdGVyLmQudHMiLCJzb3VyY2VzIjpbImtleWZpbHRlci5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7OztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEVsZW1lbnRSZWYsIEV2ZW50RW1pdHRlciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgVmFsaWRhdG9yLCBBYnN0cmFjdENvbnRyb2wgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5leHBvcnQgZGVjbGFyZSBjb25zdCBLRVlGSUxURVJfVkFMSURBVE9SOiBhbnk7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBLZXlGaWx0ZXIgaW1wbGVtZW50cyBWYWxpZGF0b3Ige1xuICAgIGVsOiBFbGVtZW50UmVmO1xuICAgIHBWYWxpZGF0ZU9ubHk6IGJvb2xlYW47XG4gICAgbmdNb2RlbENoYW5nZTogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgcmVnZXg6IFJlZ0V4cDtcbiAgICBfcGF0dGVybjogYW55O1xuICAgIGlzQW5kcm9pZDogYm9vbGVhbjtcbiAgICBsYXN0VmFsdWU6IGFueTtcbiAgICBjb25zdHJ1Y3RvcihlbDogRWxlbWVudFJlZik7XG4gICAgZ2V0IHBhdHRlcm4oKTogYW55O1xuICAgIHNldCBwYXR0ZXJuKF9wYXR0ZXJuOiBhbnkpO1xuICAgIGlzTmF2S2V5UHJlc3MoZTogS2V5Ym9hcmRFdmVudCk6IGJvb2xlYW47XG4gICAgaXNTcGVjaWFsS2V5KGU6IEtleWJvYXJkRXZlbnQpOiBib29sZWFuO1xuICAgIGdldEtleShlOiBLZXlib2FyZEV2ZW50KTogYW55O1xuICAgIGdldENoYXJDb2RlKGU6IEtleWJvYXJkRXZlbnQpOiBudW1iZXI7XG4gICAgZmluZERlbHRhKHZhbHVlOiBzdHJpbmcsIHByZXZWYWx1ZTogc3RyaW5nKTogc3RyaW5nO1xuICAgIGlzVmFsaWRDaGFyKGM6IHN0cmluZyk6IGJvb2xlYW47XG4gICAgaXNWYWxpZFN0cmluZyhzdHI6IHN0cmluZyk6IGJvb2xlYW47XG4gICAgb25JbnB1dChlOiBLZXlib2FyZEV2ZW50KTogdm9pZDtcbiAgICBvbktleVByZXNzKGU6IEtleWJvYXJkRXZlbnQpOiB2b2lkO1xuICAgIG9uUGFzdGUoZTogYW55KTogdm9pZDtcbiAgICB2YWxpZGF0ZShjOiBBYnN0cmFjdENvbnRyb2wpOiB7XG4gICAgICAgIFtrZXk6IHN0cmluZ106IGFueTtcbiAgICB9O1xufVxuZXhwb3J0IGRlY2xhcmUgY2xhc3MgS2V5RmlsdGVyTW9kdWxlIHtcbn1cbiJdfQ==