import { ElementRef, OnInit, EventEmitter, ChangeDetectorRef } from '@angular/core';
import { ControlValueAccessor } from '@angular/forms';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from 'primeng/inputtext';
export declare const SPINNER_VALUE_ACCESSOR: any;
export declare class Spinner implements OnInit, ControlValueAccessor {
    el: ElementRef;
    cd: ChangeDetectorRef;
    onChange: EventEmitter<any>;
    onFocus: EventEmitter<any>;
    onBlur: EventEmitter<any>;
    min: number;
    max: number;
    maxlength: number;
    size: number;
    placeholder: string;
    inputId: string;
    disabled: boolean;
    readonly: boolean;
    tabindex: number;
    required: boolean;
    name: string;
    ariaLabelledBy: string;
    inputStyle: any;
    inputStyleClass: string;
    formatInput: boolean;
    decimalSeparator: string;
    thousandSeparator: string;
    precision: number;
    value: any;
    _step: number;
    formattedValue: string;
    onModelChange: Function;
    onModelTouched: Function;
    keyPattern: RegExp;
    timer: any;
    focus: boolean;
    filled: boolean;
    negativeSeparator: string;
    localeDecimalSeparator: string;
    localeThousandSeparator: string;
    thousandRegExp: RegExp;
    calculatedPrecision: number;
    inputfieldViewChild: ElementRef;
    get step(): number;
    set step(val: number);
    constructor(el: ElementRef, cd: ChangeDetectorRef);
    ngOnInit(): void;
    repeat(event: Event, interval: number, dir: number): void;
    spin(event: Event, dir: number): void;
    getPrecision(): number;
    toFixed(value: number, precision: number): string;
    onUpButtonMousedown(event: Event): void;
    onUpButtonMouseup(event: Event): void;
    onUpButtonMouseleave(event: Event): void;
    onDownButtonMousedown(event: Event): void;
    onDownButtonMouseup(event: Event): void;
    onDownButtonMouseleave(event: Event): void;
    onInputKeydown(event: KeyboardEvent): void;
    onInputChange(event: Event): void;
    onInput(event: KeyboardEvent): void;
    onInputBlur(event: any): void;
    onInputFocus(event: any): void;
    parseValue(val: string): number;
    formatValue(): void;
    clearTimer(): void;
    writeValue(value: any): void;
    registerOnChange(fn: Function): void;
    registerOnTouched(fn: Function): void;
    setDisabledState(val: boolean): void;
    updateFilledState(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<Spinner, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<Spinner, "p-spinner", never, { "step": "step"; "disabled": "disabled"; "min": "min"; "max": "max"; "maxlength": "maxlength"; "size": "size"; "placeholder": "placeholder"; "inputId": "inputId"; "readonly": "readonly"; "tabindex": "tabindex"; "required": "required"; "name": "name"; "ariaLabelledBy": "ariaLabelledBy"; "inputStyle": "inputStyle"; "inputStyleClass": "inputStyleClass"; "formatInput": "formatInput"; "decimalSeparator": "decimalSeparator"; "thousandSeparator": "thousandSeparator"; "precision": "precision"; }, { "onChange": "onChange"; "onFocus": "onFocus"; "onBlur": "onBlur"; }, never, never>;
}
export declare class SpinnerModule {
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<SpinnerModule, [typeof Spinner], [typeof ɵngcc1.CommonModule, typeof ɵngcc2.InputTextModule], [typeof Spinner]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<SpinnerModule>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3Bpbm5lci5kLnRzIiwic291cmNlcyI6WyJzcGlubmVyLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTs7OztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEVsZW1lbnRSZWYsIE9uSW5pdCwgRXZlbnRFbWl0dGVyLCBDaGFuZ2VEZXRlY3RvclJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29udHJvbFZhbHVlQWNjZXNzb3IgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5leHBvcnQgZGVjbGFyZSBjb25zdCBTUElOTkVSX1ZBTFVFX0FDQ0VTU09SOiBhbnk7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBTcGlubmVyIGltcGxlbWVudHMgT25Jbml0LCBDb250cm9sVmFsdWVBY2Nlc3NvciB7XG4gICAgZWw6IEVsZW1lbnRSZWY7XG4gICAgY2Q6IENoYW5nZURldGVjdG9yUmVmO1xuICAgIG9uQ2hhbmdlOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBvbkZvY3VzOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBvbkJsdXI6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIG1pbjogbnVtYmVyO1xuICAgIG1heDogbnVtYmVyO1xuICAgIG1heGxlbmd0aDogbnVtYmVyO1xuICAgIHNpemU6IG51bWJlcjtcbiAgICBwbGFjZWhvbGRlcjogc3RyaW5nO1xuICAgIGlucHV0SWQ6IHN0cmluZztcbiAgICBkaXNhYmxlZDogYm9vbGVhbjtcbiAgICByZWFkb25seTogYm9vbGVhbjtcbiAgICB0YWJpbmRleDogbnVtYmVyO1xuICAgIHJlcXVpcmVkOiBib29sZWFuO1xuICAgIG5hbWU6IHN0cmluZztcbiAgICBhcmlhTGFiZWxsZWRCeTogc3RyaW5nO1xuICAgIGlucHV0U3R5bGU6IGFueTtcbiAgICBpbnB1dFN0eWxlQ2xhc3M6IHN0cmluZztcbiAgICBmb3JtYXRJbnB1dDogYm9vbGVhbjtcbiAgICBkZWNpbWFsU2VwYXJhdG9yOiBzdHJpbmc7XG4gICAgdGhvdXNhbmRTZXBhcmF0b3I6IHN0cmluZztcbiAgICBwcmVjaXNpb246IG51bWJlcjtcbiAgICB2YWx1ZTogYW55O1xuICAgIF9zdGVwOiBudW1iZXI7XG4gICAgZm9ybWF0dGVkVmFsdWU6IHN0cmluZztcbiAgICBvbk1vZGVsQ2hhbmdlOiBGdW5jdGlvbjtcbiAgICBvbk1vZGVsVG91Y2hlZDogRnVuY3Rpb247XG4gICAga2V5UGF0dGVybjogUmVnRXhwO1xuICAgIHRpbWVyOiBhbnk7XG4gICAgZm9jdXM6IGJvb2xlYW47XG4gICAgZmlsbGVkOiBib29sZWFuO1xuICAgIG5lZ2F0aXZlU2VwYXJhdG9yOiBzdHJpbmc7XG4gICAgbG9jYWxlRGVjaW1hbFNlcGFyYXRvcjogc3RyaW5nO1xuICAgIGxvY2FsZVRob3VzYW5kU2VwYXJhdG9yOiBzdHJpbmc7XG4gICAgdGhvdXNhbmRSZWdFeHA6IFJlZ0V4cDtcbiAgICBjYWxjdWxhdGVkUHJlY2lzaW9uOiBudW1iZXI7XG4gICAgaW5wdXRmaWVsZFZpZXdDaGlsZDogRWxlbWVudFJlZjtcbiAgICBnZXQgc3RlcCgpOiBudW1iZXI7XG4gICAgc2V0IHN0ZXAodmFsOiBudW1iZXIpO1xuICAgIGNvbnN0cnVjdG9yKGVsOiBFbGVtZW50UmVmLCBjZDogQ2hhbmdlRGV0ZWN0b3JSZWYpO1xuICAgIG5nT25Jbml0KCk6IHZvaWQ7XG4gICAgcmVwZWF0KGV2ZW50OiBFdmVudCwgaW50ZXJ2YWw6IG51bWJlciwgZGlyOiBudW1iZXIpOiB2b2lkO1xuICAgIHNwaW4oZXZlbnQ6IEV2ZW50LCBkaXI6IG51bWJlcik6IHZvaWQ7XG4gICAgZ2V0UHJlY2lzaW9uKCk6IG51bWJlcjtcbiAgICB0b0ZpeGVkKHZhbHVlOiBudW1iZXIsIHByZWNpc2lvbjogbnVtYmVyKTogc3RyaW5nO1xuICAgIG9uVXBCdXR0b25Nb3VzZWRvd24oZXZlbnQ6IEV2ZW50KTogdm9pZDtcbiAgICBvblVwQnV0dG9uTW91c2V1cChldmVudDogRXZlbnQpOiB2b2lkO1xuICAgIG9uVXBCdXR0b25Nb3VzZWxlYXZlKGV2ZW50OiBFdmVudCk6IHZvaWQ7XG4gICAgb25Eb3duQnV0dG9uTW91c2Vkb3duKGV2ZW50OiBFdmVudCk6IHZvaWQ7XG4gICAgb25Eb3duQnV0dG9uTW91c2V1cChldmVudDogRXZlbnQpOiB2b2lkO1xuICAgIG9uRG93bkJ1dHRvbk1vdXNlbGVhdmUoZXZlbnQ6IEV2ZW50KTogdm9pZDtcbiAgICBvbklucHV0S2V5ZG93bihldmVudDogS2V5Ym9hcmRFdmVudCk6IHZvaWQ7XG4gICAgb25JbnB1dENoYW5nZShldmVudDogRXZlbnQpOiB2b2lkO1xuICAgIG9uSW5wdXQoZXZlbnQ6IEtleWJvYXJkRXZlbnQpOiB2b2lkO1xuICAgIG9uSW5wdXRCbHVyKGV2ZW50OiBhbnkpOiB2b2lkO1xuICAgIG9uSW5wdXRGb2N1cyhldmVudDogYW55KTogdm9pZDtcbiAgICBwYXJzZVZhbHVlKHZhbDogc3RyaW5nKTogbnVtYmVyO1xuICAgIGZvcm1hdFZhbHVlKCk6IHZvaWQ7XG4gICAgY2xlYXJUaW1lcigpOiB2b2lkO1xuICAgIHdyaXRlVmFsdWUodmFsdWU6IGFueSk6IHZvaWQ7XG4gICAgcmVnaXN0ZXJPbkNoYW5nZShmbjogRnVuY3Rpb24pOiB2b2lkO1xuICAgIHJlZ2lzdGVyT25Ub3VjaGVkKGZuOiBGdW5jdGlvbik6IHZvaWQ7XG4gICAgc2V0RGlzYWJsZWRTdGF0ZSh2YWw6IGJvb2xlYW4pOiB2b2lkO1xuICAgIHVwZGF0ZUZpbGxlZFN0YXRlKCk6IHZvaWQ7XG59XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBTcGlubmVyTW9kdWxlIHtcbn1cbiJdfQ==