import { AfterViewInit, OnDestroy, ElementRef, ChangeDetectorRef, QueryList, TemplateRef } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
export declare class BlockUI implements AfterViewInit, OnDestroy {
    el: ElementRef;
    cd: ChangeDetectorRef;
    target: any;
    autoZIndex: boolean;
    baseZIndex: number;
    styleClass: string;
    templates: QueryList<any>;
    mask: ElementRef;
    _blocked: boolean;
    contentTemplate: TemplateRef<any>;
    constructor(el: ElementRef, cd: ChangeDetectorRef);
    get blocked(): boolean;
    set blocked(val: boolean);
    ngAfterViewInit(): void;
    ngAfterContentInit(): void;
    block(): void;
    unblock(): void;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<BlockUI, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<BlockUI, "p-blockUI", never, { "autoZIndex": "autoZIndex"; "baseZIndex": "baseZIndex"; "blocked": "blocked"; "target": "target"; "styleClass": "styleClass"; }, {}, ["templates"], ["*"]>;
}
export declare class BlockUIModule {
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<BlockUIModule, [typeof BlockUI], [typeof ɵngcc1.CommonModule], [typeof BlockUI]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<BlockUIModule>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmxvY2t1aS5kLnRzIiwic291cmNlcyI6WyJibG9ja3VpLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7OztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFmdGVyVmlld0luaXQsIE9uRGVzdHJveSwgRWxlbWVudFJlZiwgQ2hhbmdlRGV0ZWN0b3JSZWYsIFF1ZXJ5TGlzdCwgVGVtcGxhdGVSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIEJsb2NrVUkgaW1wbGVtZW50cyBBZnRlclZpZXdJbml0LCBPbkRlc3Ryb3kge1xuICAgIGVsOiBFbGVtZW50UmVmO1xuICAgIGNkOiBDaGFuZ2VEZXRlY3RvclJlZjtcbiAgICB0YXJnZXQ6IGFueTtcbiAgICBhdXRvWkluZGV4OiBib29sZWFuO1xuICAgIGJhc2VaSW5kZXg6IG51bWJlcjtcbiAgICBzdHlsZUNsYXNzOiBzdHJpbmc7XG4gICAgdGVtcGxhdGVzOiBRdWVyeUxpc3Q8YW55PjtcbiAgICBtYXNrOiBFbGVtZW50UmVmO1xuICAgIF9ibG9ja2VkOiBib29sZWFuO1xuICAgIGNvbnRlbnRUZW1wbGF0ZTogVGVtcGxhdGVSZWY8YW55PjtcbiAgICBjb25zdHJ1Y3RvcihlbDogRWxlbWVudFJlZiwgY2Q6IENoYW5nZURldGVjdG9yUmVmKTtcbiAgICBnZXQgYmxvY2tlZCgpOiBib29sZWFuO1xuICAgIHNldCBibG9ja2VkKHZhbDogYm9vbGVhbik7XG4gICAgbmdBZnRlclZpZXdJbml0KCk6IHZvaWQ7XG4gICAgbmdBZnRlckNvbnRlbnRJbml0KCk6IHZvaWQ7XG4gICAgYmxvY2soKTogdm9pZDtcbiAgICB1bmJsb2NrKCk6IHZvaWQ7XG4gICAgbmdPbkRlc3Ryb3koKTogdm9pZDtcbn1cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIEJsb2NrVUlNb2R1bGUge1xufVxuIl19