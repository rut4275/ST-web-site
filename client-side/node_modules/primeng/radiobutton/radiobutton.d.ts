import { ElementRef, EventEmitter, ChangeDetectorRef } from '@angular/core';
import { ControlValueAccessor } from '@angular/forms';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
export declare const RADIO_VALUE_ACCESSOR: any;
export declare class RadioButton implements ControlValueAccessor {
    cd: ChangeDetectorRef;
    value: any;
    name: string;
    disabled: boolean;
    label: string;
    tabindex: number;
    inputId: string;
    ariaLabelledBy: string;
    style: any;
    styleClass: string;
    labelStyleClass: string;
    onClick: EventEmitter<any>;
    onFocus: EventEmitter<any>;
    onBlur: EventEmitter<any>;
    inputViewChild: ElementRef;
    onModelChange: Function;
    onModelTouched: Function;
    checked: boolean;
    focused: boolean;
    constructor(cd: ChangeDetectorRef);
    handleClick(event: any, radioButton: any, focus: any): void;
    select(event: any): void;
    writeValue(value: any): void;
    registerOnChange(fn: Function): void;
    registerOnTouched(fn: Function): void;
    setDisabledState(val: boolean): void;
    onInputFocus(event: any): void;
    onInputBlur(event: any): void;
    onChange(event: any): void;
    focus(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<RadioButton, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<RadioButton, "p-radioButton", never, { "disabled": "disabled"; "value": "value"; "name": "name"; "label": "label"; "tabindex": "tabindex"; "inputId": "inputId"; "ariaLabelledBy": "ariaLabelledBy"; "style": "style"; "styleClass": "styleClass"; "labelStyleClass": "labelStyleClass"; }, { "onClick": "onClick"; "onFocus": "onFocus"; "onBlur": "onBlur"; }, never, never>;
}
export declare class RadioButtonModule {
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<RadioButtonModule, [typeof RadioButton], [typeof ɵngcc1.CommonModule], [typeof RadioButton]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<RadioButtonModule>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmFkaW9idXR0b24uZC50cyIsInNvdXJjZXMiOlsicmFkaW9idXR0b24uZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBOzs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEVsZW1lbnRSZWYsIEV2ZW50RW1pdHRlciwgQ2hhbmdlRGV0ZWN0b3JSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvbnRyb2xWYWx1ZUFjY2Vzc29yIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuZXhwb3J0IGRlY2xhcmUgY29uc3QgUkFESU9fVkFMVUVfQUNDRVNTT1I6IGFueTtcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIFJhZGlvQnV0dG9uIGltcGxlbWVudHMgQ29udHJvbFZhbHVlQWNjZXNzb3Ige1xuICAgIGNkOiBDaGFuZ2VEZXRlY3RvclJlZjtcbiAgICB2YWx1ZTogYW55O1xuICAgIG5hbWU6IHN0cmluZztcbiAgICBkaXNhYmxlZDogYm9vbGVhbjtcbiAgICBsYWJlbDogc3RyaW5nO1xuICAgIHRhYmluZGV4OiBudW1iZXI7XG4gICAgaW5wdXRJZDogc3RyaW5nO1xuICAgIGFyaWFMYWJlbGxlZEJ5OiBzdHJpbmc7XG4gICAgc3R5bGU6IGFueTtcbiAgICBzdHlsZUNsYXNzOiBzdHJpbmc7XG4gICAgbGFiZWxTdHlsZUNsYXNzOiBzdHJpbmc7XG4gICAgb25DbGljazogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgb25Gb2N1czogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgb25CbHVyOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBpbnB1dFZpZXdDaGlsZDogRWxlbWVudFJlZjtcbiAgICBvbk1vZGVsQ2hhbmdlOiBGdW5jdGlvbjtcbiAgICBvbk1vZGVsVG91Y2hlZDogRnVuY3Rpb247XG4gICAgY2hlY2tlZDogYm9vbGVhbjtcbiAgICBmb2N1c2VkOiBib29sZWFuO1xuICAgIGNvbnN0cnVjdG9yKGNkOiBDaGFuZ2VEZXRlY3RvclJlZik7XG4gICAgaGFuZGxlQ2xpY2soZXZlbnQ6IGFueSwgcmFkaW9CdXR0b246IGFueSwgZm9jdXM6IGFueSk6IHZvaWQ7XG4gICAgc2VsZWN0KGV2ZW50OiBhbnkpOiB2b2lkO1xuICAgIHdyaXRlVmFsdWUodmFsdWU6IGFueSk6IHZvaWQ7XG4gICAgcmVnaXN0ZXJPbkNoYW5nZShmbjogRnVuY3Rpb24pOiB2b2lkO1xuICAgIHJlZ2lzdGVyT25Ub3VjaGVkKGZuOiBGdW5jdGlvbik6IHZvaWQ7XG4gICAgc2V0RGlzYWJsZWRTdGF0ZSh2YWw6IGJvb2xlYW4pOiB2b2lkO1xuICAgIG9uSW5wdXRGb2N1cyhldmVudDogYW55KTogdm9pZDtcbiAgICBvbklucHV0Qmx1cihldmVudDogYW55KTogdm9pZDtcbiAgICBvbkNoYW5nZShldmVudDogYW55KTogdm9pZDtcbiAgICBmb2N1cygpOiB2b2lkO1xufVxuZXhwb3J0IGRlY2xhcmUgY2xhc3MgUmFkaW9CdXR0b25Nb2R1bGUge1xufVxuIl19